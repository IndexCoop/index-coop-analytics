-- https://dune.com/queries/1457110

CREATE OR REPLACE VIEW 
dune_user_generated.indexcoop_supply_daily as

(with

flows as (
select
    day,
    symbol,
    sum(amount) as unit_flows
from        (
            select
                date_trunc('day', tr."evt_block_time") as day,
                t.symbol,
                sum(tr."value"/1e18) as amount
            from        erc20."ERC20_evt_Transfer" tr
            inner join  dune_user_generated."indexcoop_tokens" t on tr.contract_address = t.token_address
            and         tr."from" = '\x0000000000000000000000000000000000000000'
            group by    1,2
            
            union
            
            select
                date_trunc('day', tr."evt_block_time") as day,
                t.symbol,
                -sum(tr."value"/1e18) as amount
            from        erc20."ERC20_evt_Transfer" tr
            inner join  dune_user_generated."indexcoop_tokens" t on tr.contract_address = t.token_address
            where       tr."to" = '\x0000000000000000000000000000000000000000'
            group by    1,2
            ) t
group by    1,2
),

days_tokens as (
select
    gs.day,
    t.symbol
from        dune_user_generated."indexcoop_tokens" t
inner join  (select generate_series((select min(day) from flows), date_trunc('day', now()), '1 day') as day) gs on gs.day >= (select min(day) from flows f where f.symbol = t.symbol)
),

supply as (
select
    dt.day,
    dt.symbol,
    coalesce(f.unit_flows,0) as unit_flows,
    sum(f.unit_flows) over (partition by dt.symbol order by dt.day asc rows between unbounded preceding and current row) as supply
from        days_tokens dt
left join   flows f on dt.day = f.day and dt.symbol = f.symbol
)

select * from supply
)
